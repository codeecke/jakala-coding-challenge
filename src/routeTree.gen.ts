/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as VehiclesIdImport } from './routes/vehicles/$id'
import { Route as StarshipsIdImport } from './routes/starships/$id'
import { Route as SpeciesIdImport } from './routes/species/$id'
import { Route as PlanetsIdImport } from './routes/planets/$id'
import { Route as PeopleIdImport } from './routes/people/$id'
import { Route as FilmsIdImport } from './routes/films/$id'
import { Route as VehiclesListPageImport } from './routes/vehicles/list.$page'
import { Route as StarshipsListPageImport } from './routes/starships/list.$page'
import { Route as SpeciesListPageImport } from './routes/species/list.$page'
import { Route as PlanetsListPageImport } from './routes/planets/list.$page'
import { Route as PeopleListPageImport } from './routes/people/list.$page'
import { Route as FilmsListPageImport } from './routes/films/list.$page'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const VehiclesIdRoute = VehiclesIdImport.update({
  path: '/vehicles/$id',
  getParentRoute: () => rootRoute,
} as any)

const StarshipsIdRoute = StarshipsIdImport.update({
  path: '/starships/$id',
  getParentRoute: () => rootRoute,
} as any)

const SpeciesIdRoute = SpeciesIdImport.update({
  path: '/species/$id',
  getParentRoute: () => rootRoute,
} as any)

const PlanetsIdRoute = PlanetsIdImport.update({
  path: '/planets/$id',
  getParentRoute: () => rootRoute,
} as any)

const PeopleIdRoute = PeopleIdImport.update({
  path: '/people/$id',
  getParentRoute: () => rootRoute,
} as any)

const FilmsIdRoute = FilmsIdImport.update({
  path: '/films/$id',
  getParentRoute: () => rootRoute,
} as any)

const VehiclesListPageRoute = VehiclesListPageImport.update({
  path: '/vehicles/list/$page',
  getParentRoute: () => rootRoute,
} as any)

const StarshipsListPageRoute = StarshipsListPageImport.update({
  path: '/starships/list/$page',
  getParentRoute: () => rootRoute,
} as any)

const SpeciesListPageRoute = SpeciesListPageImport.update({
  path: '/species/list/$page',
  getParentRoute: () => rootRoute,
} as any)

const PlanetsListPageRoute = PlanetsListPageImport.update({
  path: '/planets/list/$page',
  getParentRoute: () => rootRoute,
} as any)

const PeopleListPageRoute = PeopleListPageImport.update({
  path: '/people/list/$page',
  getParentRoute: () => rootRoute,
} as any)

const FilmsListPageRoute = FilmsListPageImport.update({
  path: '/films/list/$page',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/films/$id': {
      id: '/films/$id'
      path: '/films/$id'
      fullPath: '/films/$id'
      preLoaderRoute: typeof FilmsIdImport
      parentRoute: typeof rootRoute
    }
    '/people/$id': {
      id: '/people/$id'
      path: '/people/$id'
      fullPath: '/people/$id'
      preLoaderRoute: typeof PeopleIdImport
      parentRoute: typeof rootRoute
    }
    '/planets/$id': {
      id: '/planets/$id'
      path: '/planets/$id'
      fullPath: '/planets/$id'
      preLoaderRoute: typeof PlanetsIdImport
      parentRoute: typeof rootRoute
    }
    '/species/$id': {
      id: '/species/$id'
      path: '/species/$id'
      fullPath: '/species/$id'
      preLoaderRoute: typeof SpeciesIdImport
      parentRoute: typeof rootRoute
    }
    '/starships/$id': {
      id: '/starships/$id'
      path: '/starships/$id'
      fullPath: '/starships/$id'
      preLoaderRoute: typeof StarshipsIdImport
      parentRoute: typeof rootRoute
    }
    '/vehicles/$id': {
      id: '/vehicles/$id'
      path: '/vehicles/$id'
      fullPath: '/vehicles/$id'
      preLoaderRoute: typeof VehiclesIdImport
      parentRoute: typeof rootRoute
    }
    '/films/list/$page': {
      id: '/films/list/$page'
      path: '/films/list/$page'
      fullPath: '/films/list/$page'
      preLoaderRoute: typeof FilmsListPageImport
      parentRoute: typeof rootRoute
    }
    '/people/list/$page': {
      id: '/people/list/$page'
      path: '/people/list/$page'
      fullPath: '/people/list/$page'
      preLoaderRoute: typeof PeopleListPageImport
      parentRoute: typeof rootRoute
    }
    '/planets/list/$page': {
      id: '/planets/list/$page'
      path: '/planets/list/$page'
      fullPath: '/planets/list/$page'
      preLoaderRoute: typeof PlanetsListPageImport
      parentRoute: typeof rootRoute
    }
    '/species/list/$page': {
      id: '/species/list/$page'
      path: '/species/list/$page'
      fullPath: '/species/list/$page'
      preLoaderRoute: typeof SpeciesListPageImport
      parentRoute: typeof rootRoute
    }
    '/starships/list/$page': {
      id: '/starships/list/$page'
      path: '/starships/list/$page'
      fullPath: '/starships/list/$page'
      preLoaderRoute: typeof StarshipsListPageImport
      parentRoute: typeof rootRoute
    }
    '/vehicles/list/$page': {
      id: '/vehicles/list/$page'
      path: '/vehicles/list/$page'
      fullPath: '/vehicles/list/$page'
      preLoaderRoute: typeof VehiclesListPageImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  FilmsIdRoute,
  PeopleIdRoute,
  PlanetsIdRoute,
  SpeciesIdRoute,
  StarshipsIdRoute,
  VehiclesIdRoute,
  FilmsListPageRoute,
  PeopleListPageRoute,
  PlanetsListPageRoute,
  SpeciesListPageRoute,
  StarshipsListPageRoute,
  VehiclesListPageRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/films/$id",
        "/people/$id",
        "/planets/$id",
        "/species/$id",
        "/starships/$id",
        "/vehicles/$id",
        "/films/list/$page",
        "/people/list/$page",
        "/planets/list/$page",
        "/species/list/$page",
        "/starships/list/$page",
        "/vehicles/list/$page"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/films/$id": {
      "filePath": "films/$id.tsx"
    },
    "/people/$id": {
      "filePath": "people/$id.tsx"
    },
    "/planets/$id": {
      "filePath": "planets/$id.tsx"
    },
    "/species/$id": {
      "filePath": "species/$id.tsx"
    },
    "/starships/$id": {
      "filePath": "starships/$id.tsx"
    },
    "/vehicles/$id": {
      "filePath": "vehicles/$id.tsx"
    },
    "/films/list/$page": {
      "filePath": "films/list.$page.tsx"
    },
    "/people/list/$page": {
      "filePath": "people/list.$page.tsx"
    },
    "/planets/list/$page": {
      "filePath": "planets/list.$page.tsx"
    },
    "/species/list/$page": {
      "filePath": "species/list.$page.tsx"
    },
    "/starships/list/$page": {
      "filePath": "starships/list.$page.tsx"
    },
    "/vehicles/list/$page": {
      "filePath": "vehicles/list.$page.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
