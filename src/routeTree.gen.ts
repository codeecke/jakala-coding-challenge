/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as FilmsImport } from './routes/films'
import { Route as IndexImport } from './routes/index'
import { Route as PeopleIdPageImport } from './routes/people/$id/$page'
import { Route as PeopleIdIndexImport } from './routes/people/$id/index'
import { Route as PeopleListPageImport } from './routes/people/list.$page'
import { Route as PlanetsImport } from './routes/planets'
import { Route as SpeciesImport } from './routes/species'
import { Route as StarshipsImport } from './routes/starships'
import { Route as VehiclesImport } from './routes/vehicles'

// Create/Update Routes

const VehiclesRoute = VehiclesImport.update({
  path: '/vehicles',
  getParentRoute: () => rootRoute
} as any)

const StarshipsRoute = StarshipsImport.update({
  path: '/starships',
  getParentRoute: () => rootRoute
} as any)

const SpeciesRoute = SpeciesImport.update({
  path: '/species',
  getParentRoute: () => rootRoute
} as any)

const PlanetsRoute = PlanetsImport.update({
  path: '/planets',
  getParentRoute: () => rootRoute
} as any)

const FilmsRoute = FilmsImport.update({
  path: '/films',
  getParentRoute: () => rootRoute
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute
} as any)

const PeopleIdIndexRoute = PeopleIdIndexImport.update({
  path: '/people/$id/',
  getParentRoute: () => rootRoute
} as any)

const PeopleListPageRoute = PeopleListPageImport.update({
  path: '/people/list/$page',
  getParentRoute: () => rootRoute
} as any)

const PeopleIdPageRoute = PeopleIdPageImport.update({
  path: '/people/$id/$page',
  getParentRoute: () => rootRoute
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/films': {
      id: '/films'
      path: '/films'
      fullPath: '/films'
      preLoaderRoute: typeof FilmsImport
      parentRoute: typeof rootRoute
    }
    '/planets': {
      id: '/planets'
      path: '/planets'
      fullPath: '/planets'
      preLoaderRoute: typeof PlanetsImport
      parentRoute: typeof rootRoute
    }
    '/species': {
      id: '/species'
      path: '/species'
      fullPath: '/species'
      preLoaderRoute: typeof SpeciesImport
      parentRoute: typeof rootRoute
    }
    '/starships': {
      id: '/starships'
      path: '/starships'
      fullPath: '/starships'
      preLoaderRoute: typeof StarshipsImport
      parentRoute: typeof rootRoute
    }
    '/vehicles': {
      id: '/vehicles'
      path: '/vehicles'
      fullPath: '/vehicles'
      preLoaderRoute: typeof VehiclesImport
      parentRoute: typeof rootRoute
    }
    '/people/$id/$page': {
      id: '/people/$id/$page'
      path: '/people/$id/$page'
      fullPath: '/people/$id/$page'
      preLoaderRoute: typeof PeopleIdPageImport
      parentRoute: typeof rootRoute
    }
    '/people/list/$page': {
      id: '/people/list/$page'
      path: '/people/list/$page'
      fullPath: '/people/list/$page'
      preLoaderRoute: typeof PeopleListPageImport
      parentRoute: typeof rootRoute
    }
    '/people/$id/': {
      id: '/people/$id/'
      path: '/people/$id'
      fullPath: '/people/$id'
      preLoaderRoute: typeof PeopleIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  FilmsRoute,
  PlanetsRoute,
  SpeciesRoute,
  StarshipsRoute,
  VehiclesRoute,
  PeopleIdPageRoute,
  PeopleListPageRoute,
  PeopleIdIndexRoute
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/films",
        "/planets",
        "/species",
        "/starships",
        "/vehicles",
        "/people/$id/$page",
        "/people/list/$page",
        "/people/$id/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/films": {
      "filePath": "films.tsx"
    },
    "/planets": {
      "filePath": "planets.tsx"
    },
    "/species": {
      "filePath": "species.tsx"
    },
    "/starships": {
      "filePath": "starships.tsx"
    },
    "/vehicles": {
      "filePath": "vehicles.tsx"
    },
    "/people/$id/$page": {
      "filePath": "people/$id/$page.tsx"
    },
    "/people/list/$page": {
      "filePath": "people/list.$page.tsx"
    },
    "/people/$id/": {
      "filePath": "people/$id/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
